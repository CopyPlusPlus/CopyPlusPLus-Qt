name: Build Qt application

on:
  workflow_dispatch:
  push:
    branches: ["main"]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      # - name: Install Qt
      #   uses: jurplel/install-qt-action@v3
      #   with:
      #     host: 'mac'
      #     target: 'desktop'
      #     arch: 'clang_64'
      #     dir: '${{ github.workspace }}/'
      #     cache: 'true'
      #     cache-key-prefix: 'install-qt-action'

      # - name: Configure CMake
      # run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Install Qt5
        run: |
          brew install qt@5
          brew link qt@5

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      # - name: Test
      # working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      # run: ctest -C ${{env.BUILD_TYPE}}

      - name: Mac deploy
        run: macdeployqt ${{github.workspace}}/build/CopyPlusPlus-QtWidget.app

      - name: Create DMG
        shell: bash
        run: |
          pwd
          cd ${{github.workspace}}/build
          echo "Installing create-dmg"
          npm install --global create-dmg
          echo "Creating DMG"
          create-dmg CopyPlusPlus-QtWidget.app

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: CopyPlusPlus
          path: ${{github.workspace}}/build/CopyPlusPlus-QtWidget.dmg

      - name: Download a Build Artifact
        uses: actions/download-artifact@v3
        with:
          # Artifact name
          name: CopyPlusPlus
